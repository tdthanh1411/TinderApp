<resources>
    <declare-styleable name="CropImageView">
        <attr name="cropGuidelines">
            <enum name="off" value="0"/>
            <enum name="onTouch" value="1"/>
            <enum name="on" value="2"/>
        </attr>
        <attr name="cropScaleType">
            <enum name="fitCenter" value="0"/>
            <enum name="center" value="1"/>
            <enum name="centerCrop" value="2"/>
            <enum name="centerInside" value="3"/>
        </attr>
        <attr name="cropShape">
            <enum name="rectangle" value="0"/>
            <enum name="oval" value="1"/>
            <enum name="rectangleVerticalOnly" value="2"/>
            <enum name="rectangleHorizontalOnly" value="3"/>
        </attr>
        <attr name="cornerShape">
            <enum name="rectangle" value="0"/>
            <enum name="oval" value="1"/>
        </attr>
        <attr name="cropAutoZoomEnabled" format="boolean"/>
        <attr name="cropMaxZoom" format="integer"/>
        <attr name="cropMultiTouchEnabled" format="boolean"/>
        <attr name="cropCenterMoveEnabled" format="boolean"/>
        <attr name="cropFixAspectRatio" format="boolean"/>
        <attr name="cropAspectRatioX" format="integer"/>
        <attr name="cropAspectRatioY" format="integer"/>
        <attr name="cropInitialCropWindowPaddingRatio" format="float"/>
        <attr name="cropBorderLineThickness" format="dimension"/>
        <attr name="cropBorderLineColor" format="color"/>
        <attr name="cropBorderCornerThickness" format="dimension"/>
        <attr name="cropBorderCornerOffset" format="dimension"/>
        <attr name="cropBorderCornerLength" format="dimension"/>
        <attr name="cropBorderCornerColor" format="color"/>
        <attr name="cropGuidelinesThickness" format="dimension"/>
        <attr name="cropGuidelinesColor" format="color"/>
        <attr name="cropBackgroundColor" format="color"/>
        <attr name="cropSnapRadius" format="dimension"/>
        <attr name="cropTouchRadius" format="dimension"/>
        <attr name="cropSaveBitmapToInstanceState" format="boolean"/>
        <attr name="cropShowCropOverlay" format="boolean"/>
        <attr name="cropShowProgressBar" format="boolean"/>
        <attr name="cropMinCropWindowWidth" format="dimension"/>
        <attr name="cropMinCropWindowHeight" format="dimension"/>
        <attr name="cropMinCropResultWidthPX" format="float"/>
        <attr name="cropMinCropResultHeightPX" format="float"/>
        <attr name="cropMaxCropResultWidthPX" format="float"/>
        <attr name="cropMaxCropResultHeightPX" format="float"/>
        <attr name="cropFlipHorizontally" format="boolean"/>
        <attr name="cropFlipVertically" format="boolean"/>
        <attr name="cropCornerCircleFillColor" format="color"/>
        <attr name="cropCornerRadius" format="dimension"/>
        <attr name="cropperLabelTextSize" format="float"/>
        <attr name="cropperLabelTextColor" format="color"/>
        <attr name="cropperLabelText" format="string"/>
        <attr name="cropShowLabel" format="boolean"/>
    </declare-styleable>



    <declare-styleable name="AvatarView">
        <!-- AvatarView border color -->
        <attr name="avatarViewBorderColor" format="color|reference" />
        <!-- AvatarView border color array -->
        <attr name="avatarViewBorderColorArray" format="reference" />
        <!-- AvatarView border radius -->
        <attr name="avatarViewBorderRadius" format="dimension|reference" />
        <!-- AvatarView Border width -->
        <attr name="avatarViewBorderWidth" format="dimension|reference" />
        <!-- AvatarView initials to be drawn instead of an image -->
        <attr name="avatarViewInitials" format="string" />
        <!-- AvatarView initials text size -->
        <attr name="avatarViewInitialsTextSize" format="dimension" />
        <!-- AvatarView initials text size ratio following the width size -->
        <attr name="avatarViewInitialsTextSizeRatio" format="float" />
        <!-- AvatarView initials text color -->
        <attr name="avatarViewInitialsTextColor" format="color|reference" />
        <!-- AvatarView initials background color -->
        <attr name="avatarViewInitialsBackgroundColor" format="color|reference" />
        <!-- AvatarView initials text style -->
        <attr name="avatarViewInitialsTextStyle" format="enum">
            <enum name="normal" value="0" />
            <enum name="bold" value="1" />
            <enum name="italic" value="2" />
        </attr>
        <!-- AvatarView shapes -->
        <attr name="avatarViewShape" format="enum">
            <enum name="circle" value="0" />
            <enum name="rounded_rect" value="1" />
        </attr>
        <!-- Sets the visibility of the indicator -->
        <attr name="avatarViewIndicatorEnabled" format="boolean" />
        <!-- Sets the position of the indicator -->
        <attr name="avatarViewIndicatorPosition" format="enum">
            <enum name="topLeft" value="0" />
            <enum name="topRight" value="1" />
            <enum name="bottomLeft" value="2" />
            <enum name="bottomRight" value="3" />
        </attr>
        <!-- Color of the indicator -->
        <attr name="avatarViewIndicatorColor" format="color|reference" />
        <!-- Border color of the indicator -->
        <attr name="avatarViewIndicatorBorderColor" format="color|reference" />
        <!-- Border color of the indicator array -->
        <attr name="avatarViewIndicatorBorderColorArray" format="reference" />
        <!-- Size criteria of the indicator -->
        <attr name="avatarViewIndicatorSizeCriteria" format="float" />
        <!-- Border Size criteria of the indicator -->
        <attr name="avatarViewIndicatorBorderSizeCriteria" format="float" />
        <!-- Custom drawable of the indicator -->
        <attr name="avatarViewIndicatorDrawable" format="reference" />
        <!-- Supports RTL layout is enabled or not -->
        <attr name="avatarViewSupportRtlEnabled" format="boolean" />
        <!-- Sets the maximum section size of the avatar when loading multiple images -->
        <attr name="avatarViewMaxSectionSize" format="enum">
            <enum name="one" value="1" />
            <enum name="two" value="2" />
            <enum name="three" value="3" />
            <enum name="four" value="4" />
        </attr>
        <!-- A placeholder that should be shown when loading an image -->
        <attr name="avatarViewPlaceholder" format="reference" />
        <!-- An error placeholder that should be shown when request failed -->
        <attr name="avatarViewErrorPlaceholder" format="reference" />
    </declare-styleable>

</resources>